"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
exports.id = "vendor-chunks/next-auth";
exports.ids = ["vendor-chunks/next-auth"];
exports.modules = {

/***/ "(rsc)/./node_modules/next-auth/index.js":
/*!*****************************************!*\
  !*** ./node_modules/next-auth/index.js ***!
  \*****************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   AuthError: () => (/* reexport safe */ _auth_core_errors__WEBPACK_IMPORTED_MODULE_4__.AuthError),\n/* harmony export */   \"default\": () => (/* binding */ NextAuth)\n/* harmony export */ });\n/* harmony import */ var _auth_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @auth/core */ \"(rsc)/./node_modules/@auth/core/index.js\");\n/* harmony import */ var _lib_env_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./lib/env.js */ \"(rsc)/./node_modules/next-auth/lib/env.js\");\n/* harmony import */ var _lib_index_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./lib/index.js */ \"(rsc)/./node_modules/next-auth/lib/index.js\");\n/* harmony import */ var _lib_actions_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./lib/actions.js */ \"(rsc)/./node_modules/next-auth/lib/actions.js\");\n/* harmony import */ var _auth_core_errors__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @auth/core/errors */ \"(rsc)/./node_modules/@auth/core/errors.js\");\n/**\n * _If you are looking to migrate from v4, visit the [Upgrade Guide (v5)](https://authjs.dev/guides/upgrade-to-v5)._\n *\n * ## Installation\n *\n * ```bash npm2yarn\n * npm install next-auth@beta\n * ```\n *\n * ## Environment variable inferrence\n *\n * `NEXTAUTH_URL` and `NEXTAUTH_SECRET` have been inferred since v4.\n *\n * Since NextAuth.js v5 can also automatically infer environment variables that are prefiexed with `AUTH_`.\n *\n * For example `AUTH_GITHUB_ID` and `AUTH_GITHUB_SECRET` will be used as the `clientId` and `clientSecret` options for the GitHub provider.\n *\n * :::tip\n * The environment variable name inferring has the following format for OAuth providers: `AUTH_{PROVIDER}_{ID|SECRET}`.\n *\n * `PROVIDER` is the uppercase snake case version of the provider's id, followed by either `ID` or `SECRET` respectively.\n * :::\n *\n * `AUTH_SECRET` and `AUTH_URL` are also aliased for `NEXTAUTH_SECRET` and `NEXTAUTH_URL` for consistency.\n *\n * To add social login to your app, the configuration becomes:\n *\n * ```ts title=\"auth.ts\"\n * import NextAuth from \"next-auth\"\n * import GitHub from \"next-auth/providers/github\"\n * export const { handlers, auth } = NextAuth({ providers: [ GitHub ] })\n * ```\n *\n * And the `.env.local` file:\n *\n * ```sh title=\".env.local\"\n * AUTH_GITHUB_ID=...\n * AUTH_GITHUB_SECRET=...\n * AUTH_SECRET=...\n * ```\n *\n * :::tip\n * In production, `AUTH_SECRET` is a required environment variable - if not set, NextAuth.js will throw an error. See [MissingSecretError](https://authjs.dev/reference/core/errors#missingsecret) for more details.\n * :::\n *\n * If you need to override the default values for a provider, you can still call it as a function `GitHub({...})` as before.\n *\n * @module next-auth\n */ \n\n\n\n\n/**\n *  Initialize NextAuth.js.\n *\n *  @example\n * ```ts title=\"auth.ts\"\n * import NextAuth from \"next-auth\"\n * import GitHub from \"@auth/core/providers/github\"\n *\n * export const { handlers, auth } = NextAuth({ providers: [GitHub] })\n * ```\n */ function NextAuth(config) {\n    (0,_lib_env_js__WEBPACK_IMPORTED_MODULE_1__.setEnvDefaults)(config);\n    const httpHandler = (req)=>(0,_auth_core__WEBPACK_IMPORTED_MODULE_0__.Auth)((0,_lib_env_js__WEBPACK_IMPORTED_MODULE_1__.reqWithEnvUrl)(req), config);\n    return {\n        handlers: {\n            GET: httpHandler,\n            POST: httpHandler\n        },\n        // @ts-expect-error\n        auth: (0,_lib_index_js__WEBPACK_IMPORTED_MODULE_2__.initAuth)(config),\n        signIn: (provider, options, authorizationParams)=>{\n            return (0,_lib_actions_js__WEBPACK_IMPORTED_MODULE_3__.signIn)(provider, options, authorizationParams, config);\n        },\n        signOut: (options)=>{\n            return (0,_lib_actions_js__WEBPACK_IMPORTED_MODULE_3__.signOut)(options, config);\n        },\n        update: (data)=>{\n            return (0,_lib_actions_js__WEBPACK_IMPORTED_MODULE_3__.update)(data, config);\n        }\n    };\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvbmV4dC1hdXRoL2luZGV4LmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7QUFBQTs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0NBZ0RDLEdBQ2lDO0FBQzJCO0FBQ25CO0FBQ2lCO0FBQ2I7QUFDOUM7Ozs7Ozs7Ozs7Q0FVQyxHQUNjLFNBQVNRLFNBQVNDLE1BQU07SUFDbkNQLDJEQUFjQSxDQUFDTztJQUNmLE1BQU1DLGNBQWMsQ0FBQ0MsTUFBUVgsZ0RBQUlBLENBQUNDLDBEQUFhQSxDQUFDVSxNQUFNRjtJQUN0RCxPQUFPO1FBQ0hHLFVBQVU7WUFBRUMsS0FBS0g7WUFBYUksTUFBTUo7UUFBWTtRQUNoRCxtQkFBbUI7UUFDbkJLLE1BQU1aLHVEQUFRQSxDQUFDTTtRQUNmTCxRQUFRLENBQUNZLFVBQVVDLFNBQVNDO1lBQ3hCLE9BQU9kLHVEQUFNQSxDQUFDWSxVQUFVQyxTQUFTQyxxQkFBcUJUO1FBQzFEO1FBQ0FKLFNBQVMsQ0FBQ1k7WUFDTixPQUFPWix3REFBT0EsQ0FBQ1ksU0FBU1I7UUFDNUI7UUFDQUgsUUFBUSxDQUFDYTtZQUNMLE9BQU9iLHVEQUFNQSxDQUFDYSxNQUFNVjtRQUN4QjtJQUNKO0FBQ0oiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9uZXh0anMxNF90ZXN0Ly4vbm9kZV9tb2R1bGVzL25leHQtYXV0aC9pbmRleC5qcz85NjA4Il0sInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogX0lmIHlvdSBhcmUgbG9va2luZyB0byBtaWdyYXRlIGZyb20gdjQsIHZpc2l0IHRoZSBbVXBncmFkZSBHdWlkZSAodjUpXShodHRwczovL2F1dGhqcy5kZXYvZ3VpZGVzL3VwZ3JhZGUtdG8tdjUpLl9cbiAqXG4gKiAjIyBJbnN0YWxsYXRpb25cbiAqXG4gKiBgYGBiYXNoIG5wbTJ5YXJuXG4gKiBucG0gaW5zdGFsbCBuZXh0LWF1dGhAYmV0YVxuICogYGBgXG4gKlxuICogIyMgRW52aXJvbm1lbnQgdmFyaWFibGUgaW5mZXJyZW5jZVxuICpcbiAqIGBORVhUQVVUSF9VUkxgIGFuZCBgTkVYVEFVVEhfU0VDUkVUYCBoYXZlIGJlZW4gaW5mZXJyZWQgc2luY2UgdjQuXG4gKlxuICogU2luY2UgTmV4dEF1dGguanMgdjUgY2FuIGFsc28gYXV0b21hdGljYWxseSBpbmZlciBlbnZpcm9ubWVudCB2YXJpYWJsZXMgdGhhdCBhcmUgcHJlZmlleGVkIHdpdGggYEFVVEhfYC5cbiAqXG4gKiBGb3IgZXhhbXBsZSBgQVVUSF9HSVRIVUJfSURgIGFuZCBgQVVUSF9HSVRIVUJfU0VDUkVUYCB3aWxsIGJlIHVzZWQgYXMgdGhlIGBjbGllbnRJZGAgYW5kIGBjbGllbnRTZWNyZXRgIG9wdGlvbnMgZm9yIHRoZSBHaXRIdWIgcHJvdmlkZXIuXG4gKlxuICogOjo6dGlwXG4gKiBUaGUgZW52aXJvbm1lbnQgdmFyaWFibGUgbmFtZSBpbmZlcnJpbmcgaGFzIHRoZSBmb2xsb3dpbmcgZm9ybWF0IGZvciBPQXV0aCBwcm92aWRlcnM6IGBBVVRIX3tQUk9WSURFUn1fe0lEfFNFQ1JFVH1gLlxuICpcbiAqIGBQUk9WSURFUmAgaXMgdGhlIHVwcGVyY2FzZSBzbmFrZSBjYXNlIHZlcnNpb24gb2YgdGhlIHByb3ZpZGVyJ3MgaWQsIGZvbGxvd2VkIGJ5IGVpdGhlciBgSURgIG9yIGBTRUNSRVRgIHJlc3BlY3RpdmVseS5cbiAqIDo6OlxuICpcbiAqIGBBVVRIX1NFQ1JFVGAgYW5kIGBBVVRIX1VSTGAgYXJlIGFsc28gYWxpYXNlZCBmb3IgYE5FWFRBVVRIX1NFQ1JFVGAgYW5kIGBORVhUQVVUSF9VUkxgIGZvciBjb25zaXN0ZW5jeS5cbiAqXG4gKiBUbyBhZGQgc29jaWFsIGxvZ2luIHRvIHlvdXIgYXBwLCB0aGUgY29uZmlndXJhdGlvbiBiZWNvbWVzOlxuICpcbiAqIGBgYHRzIHRpdGxlPVwiYXV0aC50c1wiXG4gKiBpbXBvcnQgTmV4dEF1dGggZnJvbSBcIm5leHQtYXV0aFwiXG4gKiBpbXBvcnQgR2l0SHViIGZyb20gXCJuZXh0LWF1dGgvcHJvdmlkZXJzL2dpdGh1YlwiXG4gKiBleHBvcnQgY29uc3QgeyBoYW5kbGVycywgYXV0aCB9ID0gTmV4dEF1dGgoeyBwcm92aWRlcnM6IFsgR2l0SHViIF0gfSlcbiAqIGBgYFxuICpcbiAqIEFuZCB0aGUgYC5lbnYubG9jYWxgIGZpbGU6XG4gKlxuICogYGBgc2ggdGl0bGU9XCIuZW52LmxvY2FsXCJcbiAqIEFVVEhfR0lUSFVCX0lEPS4uLlxuICogQVVUSF9HSVRIVUJfU0VDUkVUPS4uLlxuICogQVVUSF9TRUNSRVQ9Li4uXG4gKiBgYGBcbiAqXG4gKiA6Ojp0aXBcbiAqIEluIHByb2R1Y3Rpb24sIGBBVVRIX1NFQ1JFVGAgaXMgYSByZXF1aXJlZCBlbnZpcm9ubWVudCB2YXJpYWJsZSAtIGlmIG5vdCBzZXQsIE5leHRBdXRoLmpzIHdpbGwgdGhyb3cgYW4gZXJyb3IuIFNlZSBbTWlzc2luZ1NlY3JldEVycm9yXShodHRwczovL2F1dGhqcy5kZXYvcmVmZXJlbmNlL2NvcmUvZXJyb3JzI21pc3NpbmdzZWNyZXQpIGZvciBtb3JlIGRldGFpbHMuXG4gKiA6OjpcbiAqXG4gKiBJZiB5b3UgbmVlZCB0byBvdmVycmlkZSB0aGUgZGVmYXVsdCB2YWx1ZXMgZm9yIGEgcHJvdmlkZXIsIHlvdSBjYW4gc3RpbGwgY2FsbCBpdCBhcyBhIGZ1bmN0aW9uIGBHaXRIdWIoey4uLn0pYCBhcyBiZWZvcmUuXG4gKlxuICogQG1vZHVsZSBuZXh0LWF1dGhcbiAqL1xuaW1wb3J0IHsgQXV0aCB9IGZyb20gXCJAYXV0aC9jb3JlXCI7XG5pbXBvcnQgeyByZXFXaXRoRW52VXJsLCBzZXRFbnZEZWZhdWx0cyB9IGZyb20gXCIuL2xpYi9lbnYuanNcIjtcbmltcG9ydCB7IGluaXRBdXRoIH0gZnJvbSBcIi4vbGliL2luZGV4LmpzXCI7XG5pbXBvcnQgeyBzaWduSW4sIHNpZ25PdXQsIHVwZGF0ZSB9IGZyb20gXCIuL2xpYi9hY3Rpb25zLmpzXCI7XG5leHBvcnQgeyBBdXRoRXJyb3IgfSBmcm9tIFwiQGF1dGgvY29yZS9lcnJvcnNcIjtcbi8qKlxuICogIEluaXRpYWxpemUgTmV4dEF1dGguanMuXG4gKlxuICogIEBleGFtcGxlXG4gKiBgYGB0cyB0aXRsZT1cImF1dGgudHNcIlxuICogaW1wb3J0IE5leHRBdXRoIGZyb20gXCJuZXh0LWF1dGhcIlxuICogaW1wb3J0IEdpdEh1YiBmcm9tIFwiQGF1dGgvY29yZS9wcm92aWRlcnMvZ2l0aHViXCJcbiAqXG4gKiBleHBvcnQgY29uc3QgeyBoYW5kbGVycywgYXV0aCB9ID0gTmV4dEF1dGgoeyBwcm92aWRlcnM6IFtHaXRIdWJdIH0pXG4gKiBgYGBcbiAqL1xuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gTmV4dEF1dGgoY29uZmlnKSB7XG4gICAgc2V0RW52RGVmYXVsdHMoY29uZmlnKTtcbiAgICBjb25zdCBodHRwSGFuZGxlciA9IChyZXEpID0+IEF1dGgocmVxV2l0aEVudlVybChyZXEpLCBjb25maWcpO1xuICAgIHJldHVybiB7XG4gICAgICAgIGhhbmRsZXJzOiB7IEdFVDogaHR0cEhhbmRsZXIsIFBPU1Q6IGh0dHBIYW5kbGVyIH0sXG4gICAgICAgIC8vIEB0cy1leHBlY3QtZXJyb3JcbiAgICAgICAgYXV0aDogaW5pdEF1dGgoY29uZmlnKSxcbiAgICAgICAgc2lnbkluOiAocHJvdmlkZXIsIG9wdGlvbnMsIGF1dGhvcml6YXRpb25QYXJhbXMpID0+IHtcbiAgICAgICAgICAgIHJldHVybiBzaWduSW4ocHJvdmlkZXIsIG9wdGlvbnMsIGF1dGhvcml6YXRpb25QYXJhbXMsIGNvbmZpZyk7XG4gICAgICAgIH0sXG4gICAgICAgIHNpZ25PdXQ6IChvcHRpb25zKSA9PiB7XG4gICAgICAgICAgICByZXR1cm4gc2lnbk91dChvcHRpb25zLCBjb25maWcpO1xuICAgICAgICB9LFxuICAgICAgICB1cGRhdGU6IChkYXRhKSA9PiB7XG4gICAgICAgICAgICByZXR1cm4gdXBkYXRlKGRhdGEsIGNvbmZpZyk7XG4gICAgICAgIH0sXG4gICAgfTtcbn1cbiJdLCJuYW1lcyI6WyJBdXRoIiwicmVxV2l0aEVudlVybCIsInNldEVudkRlZmF1bHRzIiwiaW5pdEF1dGgiLCJzaWduSW4iLCJzaWduT3V0IiwidXBkYXRlIiwiQXV0aEVycm9yIiwiTmV4dEF1dGgiLCJjb25maWciLCJodHRwSGFuZGxlciIsInJlcSIsImhhbmRsZXJzIiwiR0VUIiwiUE9TVCIsImF1dGgiLCJwcm92aWRlciIsIm9wdGlvbnMiLCJhdXRob3JpemF0aW9uUGFyYW1zIiwiZGF0YSJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/next-auth/index.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/next-auth/lib/actions.js":
/*!***********************************************!*\
  !*** ./node_modules/next-auth/lib/actions.js ***!
  \***********************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   signIn: () => (/* binding */ signIn),\n/* harmony export */   signOut: () => (/* binding */ signOut),\n/* harmony export */   update: () => (/* binding */ update)\n/* harmony export */ });\n/* harmony import */ var _auth_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @auth/core */ \"(rsc)/./node_modules/@auth/core/index.js\");\n/* harmony import */ var next_headers__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! next/headers */ \"(rsc)/./node_modules/next/headers.js\");\n/* harmony import */ var next_navigation__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! next/navigation */ \"(rsc)/./node_modules/next/navigation.js\");\n/* harmony import */ var _env_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./env.js */ \"(rsc)/./node_modules/next-auth/lib/env.js\");\n\n\n\n\nasync function signIn(provider, options = {}, authorizationParams, config) {\n    const headers = new Headers((0,next_headers__WEBPACK_IMPORTED_MODULE_1__.headers)());\n    const { redirect: shouldRedirect = true, redirectTo, ...rest } = options instanceof FormData ? Object.fromEntries(options) : options;\n    const callbackUrl = redirectTo?.toString() ?? headers.get(\"Referer\") ?? \"/\";\n    const base = authUrl((0,_env_js__WEBPACK_IMPORTED_MODULE_3__.detectOrigin)(headers), \"signin\");\n    if (!provider) {\n        const url = `${base}?${new URLSearchParams({\n            callbackUrl\n        })}`;\n        if (shouldRedirect) (0,next_navigation__WEBPACK_IMPORTED_MODULE_2__.redirect)(url);\n        return url;\n    }\n    let url = `${base}/${provider}?${new URLSearchParams(authorizationParams)}`;\n    let foundProvider = undefined;\n    for (const _provider of config.providers){\n        const { id } = typeof _provider === \"function\" ? _provider?.() : _provider;\n        if (id === provider) {\n            foundProvider = id;\n            break;\n        }\n    }\n    if (!foundProvider) {\n        const url = `${base}?${new URLSearchParams({\n            callbackUrl\n        })}`;\n        if (shouldRedirect) (0,next_navigation__WEBPACK_IMPORTED_MODULE_2__.redirect)(url);\n        return url;\n    }\n    if (foundProvider === \"credentials\") {\n        url = url.replace(\"signin\", \"callback\");\n    }\n    headers.set(\"Content-Type\", \"application/x-www-form-urlencoded\");\n    const body = new URLSearchParams({\n        ...rest,\n        callbackUrl\n    });\n    const req = new Request(url, {\n        method: \"POST\",\n        headers,\n        body\n    });\n    const res = await (0,_auth_core__WEBPACK_IMPORTED_MODULE_0__.Auth)(req, {\n        ...config,\n        raw: _auth_core__WEBPACK_IMPORTED_MODULE_0__.raw,\n        skipCSRFCheck: _auth_core__WEBPACK_IMPORTED_MODULE_0__.skipCSRFCheck\n    });\n    for (const c of res?.cookies ?? [])(0,next_headers__WEBPACK_IMPORTED_MODULE_1__.cookies)().set(c.name, c.value, c.options);\n    if (shouldRedirect) return (0,next_navigation__WEBPACK_IMPORTED_MODULE_2__.redirect)(res.redirect);\n    return res.redirect;\n}\nasync function signOut(options, config) {\n    const headers = new Headers((0,next_headers__WEBPACK_IMPORTED_MODULE_1__.headers)());\n    headers.set(\"Content-Type\", \"application/x-www-form-urlencoded\");\n    const url = authUrl((0,_env_js__WEBPACK_IMPORTED_MODULE_3__.detectOrigin)(headers), \"signout\");\n    const callbackUrl = options?.redirectTo ?? headers.get(\"Referer\") ?? \"/\";\n    const body = new URLSearchParams({\n        callbackUrl\n    });\n    const req = new Request(url, {\n        method: \"POST\",\n        headers,\n        body\n    });\n    const res = await (0,_auth_core__WEBPACK_IMPORTED_MODULE_0__.Auth)(req, {\n        ...config,\n        raw: _auth_core__WEBPACK_IMPORTED_MODULE_0__.raw,\n        skipCSRFCheck: _auth_core__WEBPACK_IMPORTED_MODULE_0__.skipCSRFCheck\n    });\n    for (const c of res?.cookies ?? [])(0,next_headers__WEBPACK_IMPORTED_MODULE_1__.cookies)().set(c.name, c.value, c.options);\n    if (options?.redirect ?? true) return (0,next_navigation__WEBPACK_IMPORTED_MODULE_2__.redirect)(res.redirect);\n    return res;\n}\nasync function update(data, config) {\n    const headers = new Headers((0,next_headers__WEBPACK_IMPORTED_MODULE_1__.headers)());\n    headers.set(\"Content-Type\", \"application/json\");\n    const url = authUrl((0,_env_js__WEBPACK_IMPORTED_MODULE_3__.detectOrigin)(headers), \"session\");\n    const body = JSON.stringify({\n        data\n    });\n    const req = new Request(url, {\n        method: \"POST\",\n        headers,\n        body\n    });\n    const res = await (0,_auth_core__WEBPACK_IMPORTED_MODULE_0__.Auth)(req, {\n        ...config,\n        raw: _auth_core__WEBPACK_IMPORTED_MODULE_0__.raw,\n        skipCSRFCheck: _auth_core__WEBPACK_IMPORTED_MODULE_0__.skipCSRFCheck\n    });\n    for (const c of res?.cookies ?? [])(0,next_headers__WEBPACK_IMPORTED_MODULE_1__.cookies)().set(c.name, c.value, c.options);\n    return res.body;\n}\n/** Determine an action's URL */ function authUrl(base, action) {\n    let pathname;\n    if (base.pathname === \"/\") pathname ?? (pathname = `/api/auth/${action}`);\n    else pathname ?? (pathname = `${base.pathname}/${action}`);\n    return new URL(pathname, base.origin);\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvbmV4dC1hdXRoL2xpYi9hY3Rpb25zLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7QUFBc0Q7QUFDUztBQUNwQjtBQUNIO0FBQ2pDLGVBQWVRLE9BQU9DLFFBQVEsRUFBRUMsVUFBVSxDQUFDLENBQUMsRUFBRUMsbUJBQW1CLEVBQUVDLE1BQU07SUFDNUUsTUFBTVQsVUFBVSxJQUFJVSxRQUFRVCxxREFBV0E7SUFDdkMsTUFBTSxFQUFFRSxVQUFVUSxpQkFBaUIsSUFBSSxFQUFFQyxVQUFVLEVBQUUsR0FBR0MsTUFBTSxHQUFHTixtQkFBbUJPLFdBQVdDLE9BQU9DLFdBQVcsQ0FBQ1QsV0FBV0E7SUFDN0gsTUFBTVUsY0FBY0wsWUFBWU0sY0FBY2xCLFFBQVFtQixHQUFHLENBQUMsY0FBYztJQUN4RSxNQUFNQyxPQUFPQyxRQUFRakIscURBQVlBLENBQUNKLFVBQVU7SUFDNUMsSUFBSSxDQUFDTSxVQUFVO1FBQ1gsTUFBTWdCLE1BQU0sQ0FBQyxFQUFFRixLQUFLLENBQUMsRUFBRSxJQUFJRyxnQkFBZ0I7WUFBRU47UUFBWSxHQUFHLENBQUM7UUFDN0QsSUFBSU4sZ0JBQ0FSLHlEQUFRQSxDQUFDbUI7UUFDYixPQUFPQTtJQUNYO0lBQ0EsSUFBSUEsTUFBTSxDQUFDLEVBQUVGLEtBQUssQ0FBQyxFQUFFZCxTQUFTLENBQUMsRUFBRSxJQUFJaUIsZ0JBQWdCZixxQkFBcUIsQ0FBQztJQUMzRSxJQUFJZ0IsZ0JBQWdCQztJQUNwQixLQUFLLE1BQU1DLGFBQWFqQixPQUFPa0IsU0FBUyxDQUFFO1FBQ3RDLE1BQU0sRUFBRUMsRUFBRSxFQUFFLEdBQUcsT0FBT0YsY0FBYyxhQUFhQSxnQkFBZ0JBO1FBQ2pFLElBQUlFLE9BQU90QixVQUFVO1lBQ2pCa0IsZ0JBQWdCSTtZQUNoQjtRQUNKO0lBQ0o7SUFDQSxJQUFJLENBQUNKLGVBQWU7UUFDaEIsTUFBTUYsTUFBTSxDQUFDLEVBQUVGLEtBQUssQ0FBQyxFQUFFLElBQUlHLGdCQUFn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LENBQUFBLFdBQVcsQ0FBQyxVQUFVLEVBQUVELE9BQU8sQ0FBQztTQUU3Q0MsWUFBYUEsQ0FBQUEsV0FBVyxDQUFDLEVBQUV6QixLQUFLeUIsUUFBUSxDQUFDLENBQUMsRUFBRUQsT0FBTyxDQUFDO0lBQ3hELE9BQU8sSUFBSUUsSUFBSUQsVUFBVXpCLEtBQUsyQixNQUFNO0FBQ3hDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vbmV4dGpzMTRfdGVzdC8uL25vZGVfbW9kdWxlcy9uZXh0LWF1dGgvbGliL2FjdGlvbnMuanM/YjVkYiJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBBdXRoLCByYXcsIHNraXBDU1JGQ2hlY2sgfSBmcm9tIFwiQGF1dGgvY29yZVwiO1xuaW1wb3J0IHsgaGVhZGVycyBhcyBuZXh0SGVhZGVycywgY29va2llcyB9IGZyb20gXCJuZXh0L2hlYWRlcnNcIjtcbmltcG9ydCB7IHJlZGlyZWN0IH0gZnJvbSBcIm5leHQvbmF2aWdhdGlvblwiO1xuaW1wb3J0IHsgZGV0ZWN0T3JpZ2luIH0gZnJvbSBcIi4vZW52LmpzXCI7XG5leHBvcnQgYXN5bmMgZnVuY3Rpb24gc2lnbkluKHByb3ZpZGVyLCBvcHRpb25zID0ge30sIGF1dGhvcml6YXRpb25QYXJhbXMsIGNvbmZpZykge1xuICAgIGNvbnN0IGhlYWRlcnMgPSBuZXcgSGVhZGVycyhuZXh0SGVhZGVycygpKTtcbiAgICBjb25zdCB7IHJlZGlyZWN0OiBzaG91bGRSZWRpcmVjdCA9IHRydWUsIHJlZGlyZWN0VG8sIC4uLnJlc3QgfSA9IG9wdGlvbnMgaW5zdGFuY2VvZiBGb3JtRGF0YSA/IE9iamVjdC5mcm9tRW50cmllcyhvcHRpb25zKSA6IG9wdGlvbnM7XG4gICAgY29uc3QgY2FsbGJhY2tVcmwgPSByZWRpcmVjdFRvPy50b1N0cmluZygpID8/IGhlYWRlcnMuZ2V0KFwiUmVmZXJlclwiKSA/PyBcIi9cIjtcbiAgICBjb25zdCBiYXNlID0gYXV0aFVybChkZXRlY3RPcmlnaW4oaGVhZGVycyksIFwic2lnbmluXCIpO1xuICAgIGlmICghcHJvdmlkZXIpIHtcbiAgICAgICAgY29uc3QgdXJsID0gYCR7YmFzZX0/JHtuZXcgVVJMU2VhcmNoUGFyYW1zKHsgY2FsbGJhY2tVcmwgfSl9YDtcbiAgICAgICAgaWYgKHNob3VsZFJlZGlyZWN0KVxuICAgICAgICAgICAgcmVkaXJlY3QodXJsKTtcbiAgICAgICAgcmV0dXJuIHVybDtcbiAgICB9XG4gICAgbGV0IHVybCA9IGAke2Jhc2V9LyR7cHJvdmlkZXJ9PyR7bmV3IFVSTFNlYXJjaFBhcmFtcyhhdXRob3JpemF0aW9uUGFyYW1zKX1gO1xuICAgIGxldCBmb3VuZFByb3ZpZGVyID0gdW5kZWZpbmVkO1xuICAgIGZvciAoY29uc3QgX3Byb3ZpZGVyIG9mIGNvbmZpZy5wcm92aWRlcnMpIHtcbiAgICAgICAgY29uc3QgeyBpZCB9ID0gdHlwZW9mIF9wcm92aWRlciA9PT0gXCJmdW5jdGlvblwiID8gX3Byb3ZpZGVyPy4oKSA6IF9wcm92aWRlcjtcbiAgICAgICAgaWYgKGlkID09PSBwcm92aWRlcikge1xuICAgICAgICAgICAgZm91bmRQcm92aWRlciA9IGlkO1xuICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgIH1cbiAgICB9XG4gICAgaWYgKCFmb3VuZFByb3ZpZGVyKSB7XG4gICAgICAgIGNvbnN0IHVybCA9IGAke2Jhc2V9PyR7bmV3IFVSTFNlYXJjaFBhcmFtcyh7IGNhbGxiYWNrVXJsIH0pfWA7XG4gICAgICAgIGlmIChzaG91bGRSZWRpcmVjdClcbiAgICAgICAgICAgIHJlZGlyZWN0KHVybCk7XG4gICAgICAgIHJldHVybiB1cmw7XG4gICAgfVxuICAgIGlmIChmb3VuZFByb3ZpZGVyID09PSBcImNyZWRlbnRpYWxzXCIpIHtcbiAgICAgICAgdXJsID0gdXJsLnJlcGxhY2UoXCJzaWduaW5cIiwgXCJjYWxsYmFja1wiKTtcbiAgICB9XG4gICAgaGVhZGVycy5zZXQoXCJDb250ZW50LVR5cGVcIiwgXCJhcHBsaWNhdGlvbi94LXd3dy1mb3JtLXVybGVuY29kZWRcIik7XG4gICAgY29uc3QgYm9keSA9IG5ldyBVUkxTZWFyY2hQYXJhbXMoeyAuLi5yZXN0LCBjYWxsYmFja1VybCB9KTtcbiAgICBjb25zdCByZXEgPSBuZXcgUmVxdWVzdCh1cmwsIHsgbWV0aG9kOiBcIlBPU1RcIiwgaGVhZGVycywgYm9keSB9KTtcbiAgICBjb25zdCByZXMgPSBhd2FpdCBBdXRoKHJlcSwgeyAuLi5jb25maWcsIHJhdywgc2tpcENTUkZDaGVjayB9KTtcbiAgICBmb3IgKGNvbnN0IGMgb2YgcmVzPy5jb29raWVzID8/IFtdKVxuICAgICAgICBjb29raWVzKCkuc2V0KGMubmFtZSwgYy52YWx1ZSwgYy5vcHRpb25zKTtcbiAgICBpZiAoc2hvdWxkUmVkaXJlY3QpXG4gICAgICAgIHJldHVybiByZWRpcmVjdChyZXMucmVkaXJlY3QpO1xuICAgIHJldHVybiByZXMucmVkaXJlY3Q7XG59XG5leHBvcnQgYXN5bmMgZnVuY3Rpb24gc2lnbk91dChvcHRpb25zLCBjb25maWcpIHtcbiAgICBjb25zdCBoZWFkZXJzID0gbmV3IEhlYWRlcnMobmV4dEhlYWRlcnMoKSk7XG4gICAgaGVhZGVycy5zZXQoXCJDb250ZW50LVR5cGVcIiwgXCJhcHBsaWNhdGlvbi94LXd3dy1mb3JtLXVybGVuY29kZWRcIik7XG4gICAgY29uc3QgdXJsID0gYXV0aFVybChkZXRlY3RPcmlnaW4oaGVhZGVycyksIFwic2lnbm91dFwiKTtcbiAgICBjb25zdCBjYWxsYmFja1VybCA9IG9wdGlvbnM/LnJlZGlyZWN0VG8gPz8gaGVhZGVycy5nZXQoXCJSZWZlcmVyXCIpID8/IFwiL1wiO1xuICAgIGNvbnN0IGJvZHkgPSBuZXcgVVJMU2VhcmNoUGFyYW1zKHsgY2FsbGJhY2tVcmwgfSk7XG4gICAgY29uc3QgcmVxID0gbmV3IFJlcXVlc3QodXJsLCB7IG1ldGhvZDogXCJQT1NUXCIsIGhlYWRlcnMsIGJvZHkgfSk7XG4gICAgY29uc3QgcmVzID0gYXdhaXQgQXV0aChyZXEsIHsgLi4uY29uZmlnLCByYXcsIHNraXBDU1JGQ2hlY2sgfSk7XG4gICAgZm9yIChjb25zdCBjIG9mIHJlcz8uY29va2llcyA/PyBbXSlcbiAgICAgICAgY29va2llcygpLnNldChjLm5hbWUsIGMudmFsdWUsIGMub3B0aW9ucyk7XG4gICAgaWYgKG9wdGlvbnM/LnJlZGlyZWN0ID8/IHRydWUpXG4gICAgICAgIHJldHVybiByZWRpcmVjdChyZXMucmVkaXJlY3QpO1xuICAgIHJldHVybiByZXM7XG59XG5leHBvcnQgYXN5bmMgZnVuY3Rpb24gdXBkYXRlKGRhdGEsIGNvbmZpZykge1xuICAgIGNvbnN0IGhlYWRlcnMgPSBuZXcgSGVhZGVycyhuZXh0SGVhZGVycygpKTtcbiAgICBoZWFkZXJzLnNldChcIkNvbnRlbnQtVHlwZVwiLCBcImFwcGxpY2F0aW9uL2pzb25cIik7XG4gICAgY29uc3QgdXJsID0gYXV0aFVybChkZXRlY3RPcmlnaW4oaGVhZGVycyksIFwic2Vzc2lvblwiKTtcbiAgICBjb25zdCBib2R5ID0gSlNPTi5zdHJpbmdpZnkoeyBkYXRhIH0pO1xuICAgIGNvbnN0IHJlcSA9IG5ldyBSZXF1ZXN0KHVybCwgeyBtZXRob2Q6IFwiUE9TVFwiLCBoZWFkZXJzLCBib2R5IH0pO1xuICAgIGNvbnN0IHJlcyA9IGF3YWl0IEF1dGgocmVxLCB7IC4uLmNvbmZpZywgcmF3LCBza2lwQ1NSRkNoZWNrIH0pO1xuICAgIGZvciAoY29uc3QgYyBvZiByZXM/LmNvb2tpZXMgPz8gW10pXG4gICAgICAgIGNvb2tpZXMoKS5zZXQoYy5uYW1lLCBjLnZhbHVlLCBjLm9wdGlvbnMpO1xuICAgIHJldHVybiByZXMuYm9keTtcbn1cbi8qKiBEZXRlcm1pbmUgYW4gYWN0aW9uJ3MgVVJMICovXG5mdW5jdGlvbiBhdXRoVXJsKGJhc2UsIGFjdGlvbikge1xuICAgIGxldCBwYXRobmFtZTtcbiAgICBpZiAoYmFzZS5wYXRobmFtZSA9PT0gXCIvXCIpXG4gICAgICAgIHBhdGhuYW1lID8/IChwYXRobmFtZSA9IGAvYXBpL2F1dGgvJHthY3Rpb259YCk7XG4gICAgZWxzZVxuICAgICAgICBwYXRobmFtZSA/PyAocGF0aG5hbWUgPSBgJHtiYXNlLnBhdGhuYW1lfS8ke2FjdGlvbn1gKTtcbiAgICByZXR1cm4gbmV3IFVSTChwYXRobmFtZSwgYmFzZS5vcmlnaW4pO1xufVxuIl0sIm5hbWVzIjpbIkF1dGgiLCJyYXciLCJza2lwQ1NSRkNoZWNrIiwiaGVhZGVycyIsIm5leHRIZWFkZXJzIiwiY29va2llcyIsInJlZGlyZWN0IiwiZGV0ZWN0T3JpZ2luIiwic2lnbkluIiwicHJvdmlkZXIiLCJvcHRpb25zIiwiYXV0aG9yaXphdGlvblBhcmFtcyIsImNvbmZpZyIsIkhlYWRlcnMiLCJzaG91bGRSZWRpcmVjdCIsInJlZGlyZWN0VG8iLCJyZXN0IiwiRm9ybURhdGEiLCJPYmplY3QiLCJmcm9tRW50cmllcyIsImNhbGxiYWNrVXJsIiwidG9TdHJpbmciLCJnZXQiLCJiYXNlIiwiYXV0aFVybCIsInVybCIsIlVSTFNlYXJjaFBhcmFtcyIsImZvdW5kUHJvdmlkZXIiLCJ1bmRlZmluZWQiLCJfcHJvdmlkZXIiLCJwcm92aWRlcnMiLCJpZCIsInJlcGxhY2UiLCJzZXQiLCJib2R5IiwicmVxIiwiUmVxdWVzdCIsIm1ldGhvZCIsInJlcyIsImMiLCJuYW1lIiwidmFsdWUiLCJzaWduT3V0IiwidXBkYXRlIiwiZGF0YSIsIkpTT04iLCJzdHJpbmdpZnkiLCJhY3Rpb24iLCJwYXRobmFtZSIsIlVSTCIsIm9yaWdpbiJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/next-auth/lib/actions.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/next-auth/lib/env.js":
/*!*******************************************!*\
  !*** ./node_modules/next-auth/lib/env.js ***!
  \*******************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   detectOrigin: () => (/* binding */ detectOrigin),\n/* harmony export */   reqWithEnvUrl: () => (/* binding */ reqWithEnvUrl),\n/* harmony export */   setEnvDefaults: () => (/* binding */ setEnvDefaults)\n/* harmony export */ });\nfunction setEnvDefaults(config) {\n    config.secret ?? (config.secret = process.env.AUTH_SECRET ?? process.env.NEXTAUTH_SECRET);\n    config.trustHost ?? (config.trustHost = !!(process.env.AUTH_URL ?? process.env.NEXTAUTH_URL ?? process.env.AUTH_TRUST_HOST ?? process.env.VERCEL ?? \"development\" !== \"production\"));\n    config.redirectProxyUrl ?? (config.redirectProxyUrl = process.env.AUTH_REDIRECT_PROXY_URL);\n    config.providers = config.providers.map((p)=>{\n        const finalProvider = typeof p === \"function\" ? p({}) : p;\n        if (finalProvider.type === \"oauth\" || finalProvider.type === \"oidc\") {\n            const ID = finalProvider.id.toUpperCase();\n            finalProvider.clientId ?? (finalProvider.clientId = process.env[`AUTH_${ID}_ID`]);\n            finalProvider.clientSecret ?? (finalProvider.clientSecret = process.env[`AUTH_${ID}_SECRET`]);\n            if (finalProvider.type === \"oidc\") {\n                finalProvider.issuer ?? (finalProvider.issuer = process.env[`AUTH_${ID}_ISSUER`]);\n            }\n        }\n        return finalProvider;\n    });\n}\n/**\n * Extract the origin from `NEXTAUTH_URL` or `AUTH_URL`\n * environment variables, or the request's headers.\n */ function detectOrigin(h) {\n    const url = process.env.AUTH_URL ?? process.env.NEXTAUTH_URL;\n    if (url) return new URL(url);\n    const host = h.get(\"x-forwarded-host\") ?? h.get(\"host\");\n    const protocol = h.get(\"x-forwarded-proto\") === \"http\" ? \"http\" : \"https\";\n    return new URL(`${protocol}://${host}`);\n}\n/** If `NEXTAUTH_URL` or `AUTH_URL` is defined, override the request's URL. */ function reqWithEnvUrl(req) {\n    const url = process.env.AUTH_URL ?? process.env.NEXTAUTH_URL;\n    if (!url) return req;\n    const base = new URL(url).origin;\n    // REVIEW: Bug in Next.js?: TypeError: next_dist_server_web_exports_next_request__WEBPACK_IMPORTED_MODULE_0__ is not a constructor\n    // return new NextRequest(new URL(nonBase, base), req)\n    const _url = req.nextUrl.clone();\n    _url.href = req.nextUrl.href.replace(req.nextUrl.origin, base);\n    const _req = new Request(_url, req);\n    _req.nextUrl = _url;\n    return _req;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,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ZV9tb2R1bGVzL25leHQtYXV0aC9saWIvZW52LmpzPzU4YWYiXSwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0IGZ1bmN0aW9uIHNldEVudkRlZmF1bHRzKGNvbmZpZykge1xuICAgIGNvbmZpZy5zZWNyZXQgPz8gKGNvbmZpZy5zZWNyZXQgPSBwcm9jZXNzLmVudi5BVVRIX1NFQ1JFVCA/PyBwcm9jZXNzLmVudi5ORVhUQVVUSF9TRUNSRVQpO1xuICAgIGNvbmZpZy50cnVzdEhvc3QgPz8gKGNvbmZpZy50cnVzdEhvc3QgPSAhIShwcm9jZXNzLmVudi5BVVRIX1VSTCA/P1xuICAgICAgICBwcm9jZXNzLmVudi5ORVhUQVVUSF9VUkwgPz9cbiAgICAgICAgcHJvY2Vzcy5lbnYuQVVUSF9UUlVTVF9IT1NUID8/XG4gICAgICAgIHByb2Nlc3MuZW52LlZFUkNFTCA/P1xuICAgICAgICBwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gXCJwcm9kdWN0aW9uXCIpKTtcbiAgICBjb25maWcucmVkaXJlY3RQcm94eVVybCA/PyAoY29uZmlnLnJlZGlyZWN0UHJveHlVcmwgPSBwcm9jZXNzLmVudi5BVVRIX1JFRElSRUNUX1BST1hZX1VSTCk7XG4gICAgY29uZmlnLnByb3ZpZGVycyA9IGNvbmZpZy5wcm92aWRlcnMubWFwKChwKSA9PiB7XG4gICAgICAgIGNvbnN0IGZpbmFsUHJvdmlkZXIgPSB0eXBlb2YgcCA9PT0gXCJmdW5jdGlvblwiID8gcCh7fSkgOiBwO1xuICAgICAgICBpZiAoZmluYWxQcm92aWRlci50eXBlID09PSBcIm9hdXRoXCIgfHwgZmluYWxQcm92aWRlci50eXBlID09PSBcIm9pZGNcIikge1xuICAgICAgICAgICAgY29uc3QgSUQgPSBmaW5hbFByb3ZpZGVyLmlkLnRvVXBwZXJDYXNlKCk7XG4gICAgICAgICAgICBmaW5hbFByb3ZpZGVyLmNsaWVudElkID8/IChmaW5hbFByb3ZpZGVyLmNsaWVudElkID0gcHJvY2Vzcy5lbnZbYEFVVEhfJHtJRH1fSURgXSk7XG4gICAgICAgICAgICBmaW5hbFByb3ZpZGVyLmNsaWVudFNlY3JldCA/PyAoZmluYWxQcm92aWRlci5jbGllbnRTZWNyZXQgPSBwcm9jZXNzLmVudltgQVVUSF8ke0lEfV9TRUNSRVRgXSk7XG4gICAgICAgICAgICBpZiAoZmluYWxQcm92aWRlci50eXBlID09PSBcIm9pZGNcIikge1xuICAgICAgICAgICAgICAgIGZpbmFsUHJvdmlkZXIuaXNzdWVyID8/IChmaW5hbFByb3ZpZGVyLmlzc3VlciA9IHByb2Nlc3MuZW52W2BBVVRIXyR7SUR9X0lTU1VFUmBdKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gZmluYWxQcm92aWRlcjtcbiAgICB9KTtcbn1cbi8qKlxuICogRXh0cmFjdCB0aGUgb3JpZ2luIGZyb20gYE5FWFRBVVRIX1VSTGAgb3IgYEFVVEhfVVJMYFxuICogZW52aXJvbm1lbnQgdmFyaWFibGVzLCBvciB0aGUgcmVxdWVzdCdzIGhlYWRlcnMuXG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBkZXRlY3RPcmlnaW4oaCkge1xuICAgIGNvbnN0IHVybCA9IHByb2Nlc3MuZW52LkFVVEhfVVJMID8/IHByb2Nlc3MuZW52Lk5FWFRBVVRIX1VSTDtcbiAgICBpZiAodXJsKVxuICAgICAgICByZXR1cm4gbmV3IFVSTCh1cmwpO1xuICAgIGNvbnN0IGhvc3QgPSBoLmdldChcIngtZm9yd2FyZGVkLWhvc3RcIikgPz8gaC5nZXQoXCJob3N0XCIpO1xuICAgIGNvbnN0IHByb3RvY29sID0gaC5nZXQoXCJ4LWZvcndhcmRlZC1wcm90b1wiKSA9PT0gXCJodHRwXCIgPyBcImh0dHBcIiA6IFwiaHR0cHNcIjtcbiAgICByZXR1cm4gbmV3IFVSTChgJHtwcm90b2NvbH06Ly8ke2hvc3R9YCk7XG59XG4vKiogSWYgYE5FWFRBVVRIX1VSTGAgb3IgYEFVVEhfVVJMYCBpcyBkZWZpbmVkLCBvdmVycmlkZSB0aGUgcmVxdWVzdCdzIFVSTC4gKi9cbmV4cG9ydCBmdW5jdGlvbiByZXFXaXRoRW52VXJsKHJlcSkge1xuICAgIGNvbnN0IHVybCA9IHByb2Nlc3MuZW52LkFVVEhfVVJMID8/IHByb2Nlc3MuZW52Lk5FWFRBVVRIX1VSTDtcbiAgICBpZiAoIXVybClcbiAgICAgICAgcmV0dXJuIHJlcTtcbiAgICBjb25zdCBiYXNlID0gbmV3IFVSTCh1cmwpLm9yaWdpbjtcbiAgICAvLyBSRVZJRVc6IEJ1ZyBpbiBOZXh0LmpzPzogVHlwZUVycm9yOiBuZXh0X2Rpc3Rfc2VydmVyX3dlYl9leHBvcnRzX25leHRfcmVxdWVzdF9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMF9fIGlzIG5vdCBhIGNvbnN0cnVjdG9yXG4gICAgLy8gcmV0dXJuIG5ldyBOZXh0UmVxdWVzdChuZXcgVVJMKG5vbkJhc2UsIGJhc2UpLCByZXEpXG4gICAgY29uc3QgX3VybCA9IHJlcS5uZXh0VXJsLmNsb25lKCk7XG4gICAgX3VybC5ocmVmID0gcmVxLm5leHRVcmwuaHJlZi5yZXBsYWNlKHJlcS5uZXh0VXJsLm9yaWdpbiwgYmFzZSk7XG4gICAgY29uc3QgX3JlcSA9IG5ldyBSZXF1ZXN0KF91cmwsIHJlcSk7XG4gICAgX3JlcS5uZXh0VXJsID0gX3VybDtcbiAgICByZXR1cm4gX3JlcTtcbn1cbiJdLCJuYW1lcyI6WyJzZXRFbnZEZWZhdWx0cyIsImNvbmZpZyIsInNlY3JldCIsInByb2Nlc3MiLCJlbnYiLCJBVVRIX1NFQ1JFVCIsIk5FWFRBVVRIX1NFQ1JFVCIsInRydXN0SG9zdCIsIkFVVEhfVVJMIiwiTkVYVEFVVEhfVVJMIiwiQVVUSF9UUlVTVF9IT1NUIiwiVkVSQ0VMIiwicmVkaXJlY3RQcm94eVVybCIsIkFVVEhfUkVESVJFQ1RfUFJPWFlfVVJMIiwicHJvdmlkZXJzIiwibWFwIiwicCIsImZpbmFsUHJvdmlkZXIiLCJ0eXBlIiwiSUQiLCJpZCIsInRvVXBwZXJDYXNlIiwiY2xpZW50SWQiLCJjbGllbnRTZWNyZXQiLCJpc3N1ZXIiLCJkZXRlY3RPcmlnaW4iLCJoIiwidXJsIiwiVVJMIiwiaG9zdCIsImdldCIsInByb3RvY29sIiwicmVxV2l0aEVudlVybCIsInJlcSIsImJhc2UiLCJvcmlnaW4iLCJfdXJsIiwibmV4dFVybCIsImNsb25lIiwiaHJlZiIsInJlcGxhY2UiLCJfcmVxIiwiUmVxdWVzdCJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/next-auth/lib/env.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/next-auth/lib/index.js":
/*!*********************************************!*\
  !*** ./node_modules/next-auth/lib/index.js ***!
  \*********************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   initAuth: () => (/* binding */ initAuth)\n/* harmony export */ });\n/* harmony import */ var _auth_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @auth/core */ \"(rsc)/./node_modules/@auth/core/index.js\");\n/* harmony import */ var next_headers__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! next/headers */ \"(rsc)/./node_modules/next/headers.js\");\n/* harmony import */ var next_dist_server_web_exports_next_response__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! next/dist/server/web/exports/next-response */ \"(rsc)/./node_modules/next/dist/server/web/exports/next-response.js\");\n/* harmony import */ var _env_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./env.js */ \"(rsc)/./node_modules/next-auth/lib/env.js\");\n\n\n\n\n/** Server-side method to read the session. */ async function getSession(headers, config) {\n    const origin = (0,_env_js__WEBPACK_IMPORTED_MODULE_3__.detectOrigin)(headers);\n    const request = new Request(`${origin}/session`, {\n        headers: {\n            cookie: headers.get(\"cookie\") ?? \"\"\n        }\n    });\n    return (0,_auth_core__WEBPACK_IMPORTED_MODULE_0__.Auth)(request, {\n        ...config,\n        callbacks: {\n            ...config.callbacks,\n            // Since we are server-side, we don't need to filter out the session data\n            // See https://authjs.dev/guides/upgrade-to-v5/v5#authenticating-server-side\n            // TODO: Taint the session data to prevent accidental leakage to the client\n            // https://react.devreference/nextjs/react/experimental_taintObjectReference\n            async session (...args) {\n                const session = // If the user defined a custom session callback, use that instead\n                await config.callbacks?.session?.(...args) ?? args[0].session;\n                const user = args[0].user ?? args[0].token;\n                return {\n                    user,\n                    ...session\n                };\n            }\n        }\n    });\n}\nfunction isReqWrapper(arg) {\n    return typeof arg === \"function\";\n}\nfunction initAuth(config) {\n    return (...args)=>{\n        if (!args.length) {\n            // React Server Components\n            return getSession((0,next_headers__WEBPACK_IMPORTED_MODULE_1__.headers)(), config).then((r)=>r.json());\n        }\n        if (args[0] instanceof Request) {\n            // middleare.ts\n            // export { auth as default } from \"auth\"\n            const req = args[0];\n            const ev = args[1];\n            return handleAuth([\n                req,\n                ev\n            ], config);\n        }\n        if (isReqWrapper(args[0])) {\n            // middleware.ts/router.ts\n            // import { auth } from \"auth\"\n            // export default auth((req) => { console.log(req.auth) }})\n            const userMiddlewareOrRoute = args[0];\n            return async (...args)=>{\n                return handleAuth(args, config, userMiddlewareOrRoute);\n            };\n        }\n        // API Routes, getServerSideProps\n        const request = \"req\" in args[0] ? args[0].req : args[0];\n        const response = \"res\" in args[0] ? args[0].res : args[1];\n        return getSession(// @ts-expect-error\n        new Headers(request.headers), config).then(async (authResponse)=>{\n            const auth = await authResponse.json();\n            for (const cookie of authResponse.headers.getSetCookie())response.headers.append(\"set-cookie\", cookie);\n            return auth;\n        });\n    };\n}\nasync function handleAuth(args, config, userMiddlewareOrRoute) {\n    const request = (0,_env_js__WEBPACK_IMPORTED_MODULE_3__.reqWithEnvUrl)(args[0]);\n    const sessionResponse = await getSession(request.headers, config);\n    const auth = await sessionResponse.json();\n    let authorized = true;\n    if (config.callbacks?.authorized) {\n        authorized = await config.callbacks.authorized({\n            request,\n            auth\n        });\n    }\n    let response = next_dist_server_web_exports_next_response__WEBPACK_IMPORTED_MODULE_2__.next?.();\n    if (authorized instanceof Response) {\n        // User returned a custom response, like redirecting to a page or 401, respect it\n        response = authorized;\n        const redirect = authorized.headers.get(\"Location\");\n        const { pathname } = request.nextUrl;\n        // If the user is redirecting to the same NextAuth.js action path as the current request,\n        // don't allow the redirect to prevent an infinite loop\n        if (redirect && isSameAuthAction(pathname, new URL(redirect).pathname, config)) {\n            authorized = true;\n        }\n    } else if (userMiddlewareOrRoute) {\n        // Execute user's middleware/handler with the augmented request\n        const augmentedReq = request;\n        augmentedReq.auth = auth;\n        response = // @ts-expect-error\n        await userMiddlewareOrRoute(augmentedReq, args[1]) ?? next_dist_server_web_exports_next_response__WEBPACK_IMPORTED_MODULE_2__.next();\n    } else if (!authorized) {\n        const signInPage = config.pages?.signIn ?? \"/api/auth/signin\";\n        if (request.nextUrl.pathname !== signInPage) {\n            // Redirect to signin page by default if not authorized\n            const signInUrl = request.nextUrl.clone();\n            signInUrl.pathname = signInPage;\n            signInUrl.searchParams.set(\"callbackUrl\", request.nextUrl.href);\n            response = next_dist_server_web_exports_next_response__WEBPACK_IMPORTED_MODULE_2__.redirect(signInUrl);\n        }\n    }\n    const finalResponse = new Response(response?.body, response);\n    // Preserve cookies from the session response\n    for (const cookie of sessionResponse.headers.getSetCookie())finalResponse.headers.append(\"set-cookie\", cookie);\n    return finalResponse;\n}\nfunction isSameAuthAction(requestPath, redirectPath, config) {\n    const action = redirectPath.replace(`${requestPath}/`, \"\");\n    const pages = Object.values(config.pages ?? {});\n    return (actions.has(action) || pages.includes(redirectPath)) && redirectPath === requestPath;\n}\nconst actions = new Set([\n    \"providers\",\n    \"session\",\n    \"csrf\",\n    \"signin\",\n    \"signout\",\n    \"callback\",\n    \"verify-request\",\n    \"error\"\n]);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/next-auth/lib/index.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/next-auth/providers/credentials.js":
/*!*********************************************************!*\
  !*** ./node_modules/next-auth/providers/credentials.js ***!
  \*********************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* reexport safe */ _auth_core_providers_credentials__WEBPACK_IMPORTED_MODULE_0__[\"default\"])\n/* harmony export */ });\n/* harmony import */ var _auth_core_providers_credentials__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @auth/core/providers/credentials */ \"(rsc)/./node_modules/@auth/core/providers/credentials.js\");\n\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvbmV4dC1hdXRoL3Byb3ZpZGVycy9jcmVkZW50aWFscy5qcyIsIm1hcHBpbmdzIjoiOzs7OztBQUFpRDtBQUNVIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vbmV4dGpzMTRfdGVzdC8uL25vZGVfbW9kdWxlcy9uZXh0LWF1dGgvcHJvdmlkZXJzL2NyZWRlbnRpYWxzLmpzPzc2MzkiXSwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0ICogZnJvbSBcIkBhdXRoL2NvcmUvcHJvdmlkZXJzL2NyZWRlbnRpYWxzXCI7XG5leHBvcnQgeyBkZWZhdWx0IH0gZnJvbSBcIkBhdXRoL2NvcmUvcHJvdmlkZXJzL2NyZWRlbnRpYWxzXCI7XG4iXSwibmFtZXMiOlsiZGVmYXVsdCJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/next-auth/providers/credentials.js\n");

/***/ })

};
;